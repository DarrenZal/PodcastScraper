name: Test Podcast Scraper

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browser
      run: |
        playwright install chromium
        
    - name: Test imports and basic functionality
      run: |
        python -c "from scripts.generic_scraper import PodcastScraper; print('✓ Generic scraper imports successfully')"
        python -c "from scripts.fix_transcripts import TranscriptFixer; print('✓ Transcript fixer imports successfully')"
        python -c "from scripts.config.podcast_configs import get_config; print('✓ Configurations load successfully')"
        
    - name: Test configuration system
      run: |
        python -c "
        from scripts.config.podcast_configs import get_config, list_available_configs
        configs = list_available_configs()
        print(f'Available configs: {configs}')
        for config_name in ['yonearth', 'wordpress']:
            config = get_config(config_name)
            print(f'✓ {config_name}: {config[\"podcast_name\"]}')
        "
        
    - name: Test example usage (dry run)
      run: |
        python examples/example_usage.py || echo "Examples completed (some network tests may fail in CI)"